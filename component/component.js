/******/!function(e){function t(o){if(n[o])return n[o].exports;var i=n[o]={exports:{},id:o,loaded:!1};return e[o].call(i.exports,i,i.exports,t),i.loaded=!0,i.exports}// webpackBootstrap
/******/
var n={};return t.m=e,t.c=n,t.p="",t(0)}([function(e,t,n){"use strict";function o(e){return e&&e.__esModule?e:{"default":e}}n(1);var i=n(4),r=o(i);angular.module("angularjsDropdownTree",["dropdownTreeOptionRowModule"]).component("dropdownTree",(0,r["default"])())},function(e,t,n){"use strict";function o(e){return e&&e.__esModule?e:{"default":e}}var i=n(2),r=o(i);angular.module("dropdownTreeOptionRowModule",[]).component("dropdownTreeOptionRow",(0,r["default"])())},function(e,t,n){"use strict";function o(e){return e&&e.__esModule?e:{"default":e}}function i(){var e={controller:l["default"],templateUrl:"app/component/option-row/option-row.template.html",bindings:{option:"<",settings:"<",optionClicked:"&",selectedOptions:"<"}};return e}Object.defineProperty(t,"__esModule",{value:!0}),t["default"]=i;var r=n(3),l=o(r)},function(e,t){"use strict";function n(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(t,"__esModule",{value:!0});var o=function(){function e(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}return function(t,n,o){return n&&e(t.prototype,n),o&&e(t,o),t}}(),i=function(){function e(){n(this,e)}return o(e,[{key:"getDisplayText",value:function(){return this.option[this.settings.displayProperty]}},{key:"isFolder",value:function(){return Object.prototype.hasOwnProperty.call(this.option,this.settings.childrenProperty)&&angular.isArray(this.option[this.settings.childrenProperty])}},{key:"getChildOptions",value:function(){return this.option[this.settings.childrenProperty]}},{key:"innerClicked",value:function(e){this.optionClicked(e)}},{key:"isSelected",value:function(){return this.selectedOptions.indexOf(this.option)>=0}}]),e}();t["default"]=i},function(e,t,n){"use strict";function o(e){return e&&e.__esModule?e:{"default":e}}function i(){var e={controller:l["default"],templateUrl:"app/component/dropdownTree.template.html",bindings:{options:"<",externalTexts:"<?texts",externalSelection:"<?selection",externalSettings:"<?settings",selectionChanged:"&"}};return e}Object.defineProperty(t,"__esModule",{value:!0}),t["default"]=i;var r=n(5),l=o(r)},function(e,t){"use strict";function n(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(t,"__esModule",{value:!0});var o=function(){function e(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}return function(t,n,o){return n&&e(t.prototype,n),o&&e(t,o),t}}(),i=function(){function e(t){"ngInject";n(this,e),this.$log=t}return e.$inject=["$log"],o(e,[{key:"$onInit",value:function(){this.open=!1,this.selectedOptions=[],this.texts={optionNames:"items"},this.settings={displayProperty:"name",childrenProperty:"children",selectedClass:["glyphicon","glyphicon-ok"]}}},{key:"$onChanges",value:function(e){angular.isDefined(e.externalTexts)&&angular.extend(this.texts,this.externalTexts),angular.isDefined(e.externalSelection)&&(angular.isArray(e.externalSelection)?(this.selectedOptions=e.externalSelection,this.emitSelection()):this.$log.error("selection should be an array")),angular.isDefined(e.settings)&&angular.extend(this.settings,e.settings)}},{key:"toggleDropdown",value:function(){this.open=!this.open}},{key:"optionClicked",value:function(e){var t=this.selectedOptions.indexOf(e);t>=0?this.selectedOptions.splice(t,1):this.selectedOptions.push(e),this.emitSelection()}},{key:"emitSelection",value:function(){this.selectionChanged({selection:this.selectedOptions})}}]),e}();t["default"]=i}]),angular.module("angularjsDropdownTree").run(["$templateCache",function(e){e.put("app/component/dropdownTree.template.html",'<div class=dropdown ng-class="[\r\n			{\'open\': $ctrl.open}\r\n		 ]"><div class="dropdown-toggle btn btn-default" ng-click=$ctrl.toggleDropdown()><span ng-if="$ctrl.selectedOptions.length === 0">Select {{$ctrl.texts.optionNames}} </span><span ng-if="$ctrl.selectedOptions.length > 0">{{$ctrl.selectedOptions.length}} {{$ctrl.texts.optionNames}} selected</span></div><div ng-if=$ctrl.open class=dropdown-menu><ul><dropdown-tree-option-row ng-repeat="option in $ctrl.options track by $index" option=option settings=$ctrl.settings option-clicked=$ctrl.optionClicked(innerOption) selected-options=$ctrl.selectedOptions></dropdown-tree-option-row></ul></div></div>'),e.put("app/component/option-row/option-row.template.html",'<li><div class=option ng-class="[\r\n				{\'folder\': $ctrl.isFolder()},\r\n			 ]"><div class=title ng-click="$ctrl.innerClicked({innerOption: $ctrl.option})"><span ng-if=$ctrl.isSelected() ng-class=$ctrl.settings.selectedClass></span> {{$ctrl.getDisplayText()}}</div><ul class=children ng-if=$ctrl.isFolder()><dropdown-tree-option-row ng-repeat="option in $ctrl.getChildOptions() track by $index" option=option settings=$ctrl.settings option-clicked="$ctrl.innerClicked({innerOption: option})" selected-options=$ctrl.selectedOptions></dropdown-tree-option-row></ul></div></li>')}]);
//# sourceMappingURL=maps/component.js.map
